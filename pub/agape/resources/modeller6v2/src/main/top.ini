--- COMMANDS:
 1  no_action
 2  SET
 3  STOP
 4  LABEL
 5  GO_TO
 6  DEFINE_INTEGER
 7  DEFINE_REAL
 8  END_DO
 9  DO
10  CALL
11  RESET
12  WRITE
13  OPERATE
14  STRING_OPERATE
15  DEFINE_STRING
16  DEFINE_LOGICAL
17  SUBROUTINE    
18  END_SUBROUTINE
19  INCLUDE      
20  RETURN
21  READ
22  OPEN
23  CLOSE
24  IF
25  WRITE_TOP
26  SYSTEM
27  INQUIRE
28  STRING_IF
31  READ_RESTRAINTS
32  READ_SCHEDULE
33  WRITE_RESTRAINTS
34  READ_MODEL
35  SUPERPOSE
36  COMPARE
37  WRITE_MODEL
38  WRITE_MODEL2
39  OPTIMIZE
40  ENERGY
41  READ_MODEL2
42  PICK_ATOMS
43  ROTATE_DIHEDRALS
44  READ_ALIGNMENT
45  DELETE_ALIGNMENT
46  SWITCH_TRACE
47  PATCH
48  TRANSFER_RES_NUMB
49  MAKE_SCHEDULE
50  WRITE_SCHEDULE
51  ID_TABLE
52  MAKE_WRITE_UHBD_LIB         
53  BUILD_MODEL
54  GENERATE_TOPOLOGY
55  MAKE_RESTRAINTS
56  READ_TOPOLOGY
57  READ_PARAMETERS
58  WRITE_TOPOLOGY_MODEL
59  MAKE_TOPOLOGY_MODEL
60  ROTATE_MODEL
61  WRITE_ALIGNMENT
62  REORDER_ATOMS        
63  PICK_RESTRAINTS
64  CONDENSE_RESTRAINTS
65  DELETE_RESTRAINT
66  ADD_RESTRAINT
67  TRANSFER_XYZ      
68  RANDOMIZE_XYZ
69  DEBUG_FUNCTION
70  undefined70
71  PICK_HOT_ATOMS        
72  REINDEX_RESTRAINTS
73  ALIGN
74  SEQUENCE_SEARCH
75  ALIGN3D
76  ORIENT_MODEL
77  DESCRIBE
78  SEQUENCE_COMPARISON
79  MALIGN3D
80  MALIGN
81  SEQUENCE_TO_ALI
82  PMF
83  MUTATE_MODEL
84  PATCH_SS_MODEL
85  WRITE_DATA
86  PRINCIPAL_COMPONENTS
87  READ_ALIGNMENT2
88  COMPARE_ALIGNMENTS
89  ALIGN_CONSENSUS
90  QUICK_AND_DIRTY
91  SPLINE_RESTRAINTS
92  RENAME_SEGMENTS
93  DEFINE_SYMMETRY
94  PATCH_SS_TEMPLATES
95  CHECK_ALIGNMENT
96  ALIGN2D
97  COLOR_ALN_MODEL
98  IUPAC_MODEL
99  DENDROGRAM
100 EXPAND_ALIGNMENT
101 UNBUILD_MODEL
102 READ_ATOM_CLASSES
103 SEGMENT_MATCHING
104 READ_RESTYP_LIB
105 WRITE_PDB_XREF
106 MAKE_REGION
--- KEYWORDS:
 1  REAL    ARGUMENTS               0 0.00  # real arguments to the math operation
31  REAL    UPDATE_DYNAMIC          1 0.39  # when to update non-bonded pairs list
32  REAL    MATRIX_OFFSET           1 0.00  # substitution matrix offset for local alignment
33  REAL    SPHERE_STDV             1 0.05  # standard deviation of soft-sphere repulsion
34  REAL    VIOL_REPORT_CUT        33 4.5 4.5 4.5 4.5 4.5 4.5 4.5 4.5 4.5 4.5 4.5 4.5 4.5 999 999 999 999 4.5 4.5 4.5 4.5 4.5 4.5 999 6.5 4.5 4.5 4.5 4.5 4.5 999 999 999 # cutoffs for reporting relative violations
35  REAL    DEBUG_FUNCTION_CUTOFF   3 0.01 0.001 0.1 # cutoffs for reporting differences between numerical and analytical derivatives: absolute, relative errors, factor_for_indiv_rstrs
36  REAL    TRANSLATION             3 0.0 0.0 0.0 # translation vector for MODEL
37  REAL    SA_STEP                 1 0.2 # amplitude of the Monte Carlo steps
38  REAL    SA_MVFRACT              1 0.8 # fraction of accepted Monte Carlo steps
39  REAL    SA_TFACTR               1 0.9 # factor for temperature deacrease in MC SA
40  REAL    SA_T0                   1 40.0 # starting SA temperature
41  REAL    SA_TMIN                 1 0.01 # final SA temperature
42  REAL    MIN_ATOM_SHIFT          1 0.010 # minimal atomic shift for the optimization convergence test
43  REAL    DEVIATION               1 0.0 # coordinate randomizaton amplitude in angstroms
44  REAL    RMS_CUTOFFS            11 3.5 3.5 60 60 15 60 60 60 60 60 60 # cutoffs for RMS, DRMS, Alpha Phi Psi Omega chi1 chi2 chi3 chi4 chi5
45  REAL    TEMPERATURE             1 293.0 # temperature for MD simulation in K
46  REAL    MD_TIME_STEP            1 4.0 # time step for MD in fs
47  REAL    RADII_FACTOR            1 0.82 # factor for van der Waals radii
48  REAL    LENNARD_JONES_SWITCH    2 6.5 7.5 # the range for Lennard-Jones interaction smoothing to 0
49  REAL    COULOMB_SWITCH          2 6.5 7.5 # the range for Coulomb interaction smoothing to 0
50  REAL    ROTATION_MATRIX         9 1 0 0 0 1 0 0 0 1 # rotation matrix for MODEL
51  REAL    BASIS_RELATIVE_WEIGHT   1 0.05 # the cutoff weight of basis pdf's for their removal
52  REAL    SYMMETRY_WEIGHT         1 1.0 # the weight of the symmetry objective function term
53  REAL    MAXIMAL_DISTANCE        1 999. # maximal distance for distance restraints
54  REAL    RESTRAINTS_FILTER      33 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 -999 # keep restraints?
55  REAL    RESTRAINT_PARAMETERS    0 3 1 3 3 4 2 0   0.0 0.087   # restraint parameters
56  REAL    SPHERE_RADIUS           1 10.0 # sphere radius for atoms selection
57  REAL    SELECTION_SLAB          5 -9999 9999 0 0 0 # slab for atoms selection: \Z{dz1} \Z{dz2} \Z{xtrans} \Z{ytrans} \Z{ztrans}
58  REAL    PICK_HOT_CUTOFF         1 4.0 # radius for picking hot atoms
59  REAL    CAP_ATOM_SHIFT          1 0.2 # limit for atomic shifts in optimization
60  REAL    MOLPDF                  1 0.0 # value of objective function
61  REAL    GAP_PENALTIES_3D        2 0.0 1.75 # gap creation and extension penalties for structure/structure superposition
62  REAL    CONTACT_SHELL           1 4.0 # distance cutoff for calculation of the non-bonded pairs list
63  REAL    RESTRAINT_STDEV         2 0.0 1.0 # transforming factors for standard deviations (y=a+bx) in models 1--6 or standard deviation for model 7 (a)
64  REAL    PMF_GRID                8 2.0 0.5 20   36 18   0 180 1 # translation and rotation grid for PMF calculation
65  REAL    RELATIVE_DIELECTRIC     1 1.0 # relative dielectric constant
66  REAL    ROTATION_ANGLE          1 0.0 # rotation of MODEL around axis [degrees]
67  REAL    ROTATION_AXIS           3 1.0 0.0 0.0 # rotation axis for MODEL
68  REAL    SPLINE_DX               1 0.5 # interval size for splining restraints
69  REAL    SPLINE_RANGE            1 4.0 # range of the splines
70  REAL    GAP_PENALTIES_2D        8 0.35 1.2 0.9 1.2 0.6 8.6 1.2 0.0 # gap penalties for sequence/structure alignment: helix, beta, accessibility, straightness, and CA--CA distance factor, dst min, dst power, t ; best U,V=-450,0
71  REAL    SCHEDULE_SCALE         33 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 # factors for physical restraint types in scaling the schedule
72  REAL    CLUSTER_CUT             1 -1.0 # definition of a cluster
73  REAL    GAP_PENALTIES_1D        2 -900 -50 # gap creation and extension penalties for sequence/sequence alignment
74  REAL    FAST_SEARCH_CUTOFF      1 1.0 # if FAST_SEARCH is ON only sequences with database scan significance higher than this value are considered for randomization significance
75  REAL    VIOL_REPORT_CUT2       33 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0 2.0
76  REAL    SIGNIF_CUTOFF           2 4.0 5.0 # cutoff for adding sequences to alignment, max difference from the best
77  REAL    SEGMENT_CUTOFF          1 999999 # cutoff for writing out an alignment in SEGMENT_MATCHING
78  REAL    FIX_OFFSETS             5 0. 1000. 2000. 3000. 4000. # offsets of the ALIGN2D alignment score for "fixed" positions indicated by ' 123456789' in line '_fix_pos'
79  REAL    PSA_INTEGRATION_STEP    1  0.1 # integration step for WRITE_DATA
80  REAL    ATOM_ACCESSIBILITY      1  1.0 # accessible atoms for MAKE_REGION
81  REAL    PROBE_RADIUS            1  1.4 # probe_radius for WRITE_DATA
82  REAL    REFERENCE_DISTANCE      1  3.5 # cutoff for selecting reference positions in SUPERPOSE
83  REAL    SUBOPT_OFFSET           1  2.0 # offset for residue-residue score in getting suboptimals in ALIGN/ALIGN2D
 1  INTEGER IO_UNIT                 1  21 # IO unit for file operations
 2  INTEGER ID1                     1  1  # ID1 for filename construction
 3  INTEGER ID2                     1  1  # ID2 for filename construction
 4  INTEGER NUMBER_PLACES           2  5 2 # pre- and post-decimal point places
 5  INTEGER FILE_EXISTS             1 0 # an output flag: 0 | 1
 6  INTEGER OUTPUT_CONTROL          5 1 0 1 1 0 # selects output, flow-control msgs, warnings, errors, dynamic mem msgs
 7  INTEGER STOP_ON_ERROR           1 1 # whether to stop on error
 8  INTEGER ERROR_STATUS            1 0 # application error status
 9  INTEGER NUMBER_LINES            1 0 # number of lines in the newly opened file
31  INTEGER SCHEDULE_STEP           1 1 # schedule step for optimization
32  INTEGER ROUTINE_TYPE            1 1 # generic routine type for a miscellaneous command
33  INTEGER NLOGN_USE               1 15 # number of residues at which to begin using the N Log N non-bonded pairs routine
34  INTEGER SA_MOVSPERATM           1 30 #
35  INTEGER RESIDUE_GROUPING        1 1 #
36  INTEGER MAX_ITERATIONS          1 200 # maximal iterations in optimization
37  INTEGER RAND_SEED               1 -8123 # random seed from -50000 to -2
38  INTEGER COMPARE_MODE            1 3 # selects the type of comparison: 1 | 2 | 3
39  INTEGER EXTEND_HOT_SPOT         1 0 # whether to extend hot spots
40  INTEGER TOPOLOGY_MODEL          1 3 # selects topology library: 1--9
41  INTEGER RENUMBER_RESIDUES       0 # starting residue index for renumbering residues
42  INTEGER N_SCHEDULE              1 1 # the number of steps in the optimization schedule
43  INTEGER DISTANCE_RSR_MODEL      1 1 # the model for calculating distance restraints: 1--7
44  INTEGER ACCESSIBILITY_TYPE      1 8 # type of solvent accessibility: 1--10
45  INTEGER RESIDUE_SPAN_RANGE      2 0 99999 # range of residues spanning the allowed distances; for MAKE_RESTRAINTS, PICK_RESTRAINTS, non-bonded dynamic pairs
46  INTEGER MAX_GAP_LENGTH          1 999999 # maximal length of gap in protein comparisons
47  INTEGER OPTIMIZATION_METHOD     1 -999 # type of optimization method: 1 | 3
48  INTEGER GAP_EXTENSION           2 2 1 # extend insertions/deletions for that many residues, in PICK_ATOMS; don't select loops longer than i3
49  INTEGER NUMB_OF_SEQUENCES       1 1 # number of sequences in the alignment
50  INTEGER TRACE_OUTPUT            1 0 # modulus for writing information about optimization iterations: 0 for nothing
51  INTEGER SEARCH_TOP_LIST         1 20 # the length of the output hits list
52  INTEGER EQUILIBRATE             1 999999 # equilibrate during MD every that many steps
53  INTEGER MAX_GAPS_MATCH          1 1 #
54  INTEGER ALIGN_BLOCK             1 1 # the last sequence in the first block of sequences
55  INTEGER PICK_ATOMS_SET          1 1 # index of the selected atoms set: 1 | 2 | 3
56  INTEGER PMF_INDICES             0 0 0 0 0 #
57  INTEGER SEARCH_RANDOMIZATIONS   1 0 # number of randomizations for calculating the significance of a sequence/sequence similarity
58  INTEGER OFF_DIAGONAL            1 100 # to speed up the alignment
59  INTEGER RESTRAINT_GROUP         1 26 # physical restraint group
60  INTEGER OVERHANG                1 0 # un-penalized overhangs in protein comparisons
61  INTEGER SPLINE_SELECT           3 4 1 9 # specification of the restraints to be splined: {\tt form  feature  group}
62  INTEGER LIBRARY_SCHEDULE        1 1 # selects schedule from the $SCHED_LIB library
63  INTEGER NONBONDED_SEL_ATOMS     1 1 # a non-bonded pair has to have at least as many selected atoms
64  INTEGER SPLINE_MIN_POINTS       1 5 # have at least as many intervals in a spline
65  INTEGER SHEET_H-BONDS           1 7 # specify hydrogen bonds in a beta-sheet
66  INTEGER SMOOTHING_WINDOW        1 3 # profiles are smoothed over 2*SW + 1 residues
67  INTEGER RESTRAINT_SEL_ATOMS     1 1 # a restraint other than non-bonded pair has to have at least as many selected atoms
68  INTEGER N_SUBOPT                1 1 # number of optimal and suboptimal alignments ALIGN/ALIGN2D
69  INTEGER PROFILE_2D_PHYS         1 33 # 1 ... 33 physical type to be presented as 2D energy profile2
70  INTEGER MIN_LOOP_LENGTH         0 # inter-segment minimal lengths in SEGMENT_MATCHING
71  INTEGER SEGMENT_SHIFTS          0 # segment shifts +- in SEGMENT_MATCHING
72  INTEGER SEGMENT_REPORT          1 1D6 # for SEGMENT_MATCHING
73  INTEGER MNCH_LIB                1 1 # which MNCH lib to use in MAKE_RESTRAINTS
74  INTEGER SEGMENT_GROWTH_N        0 # reducing/growing segment N-termini in SEGMENT_MATCHING
75  INTEGER SEGMENT_GROWTH_C        0 # reducing/growing segment C-termini in SEGMENT_MATCHING
76  INTEGER EXPAND_CONTROL          5 9999 9999 1 10 0 # for controlling EXPAND_ALIGNMENT
77  INTEGER NUMB_OF_SEQUENCES2      1 0 # number of sequence in ALIGNMENT2
78  INTEGER MAXRES                  0 0 # user specified maximal number of residues
79  INTEGER REGION_SIZE             1 20 # size of exposed region in MAKE_REGION
80  INTEGER MAX_LOOP_LENGTH         1 15 # maximal length of a loop in PICK_ATOMS
 1  STRING  OBJECTS                 0 '' # variable names or constants
 2  STRING  VARIABLES               0 '' # variable names
 3  STRING  ROUTINE                 0 '' # subroutine name
 4  STRING  ROOT_NAME               1 'undf' # root of a filename for filename construction
 5  STRING  DIRECTORY               1 '' # directory list (e.g., \Z{dir1:dir2:dir3:./:/})
 6  STRING  FILE_ID                 1 'default' # file id for filename construction
 7  STRING  OPERATION               1 'SUM' # operation to perform: \Z{SUM} | \Z{MULTIPLY} | \Z{DIVIDE} | \Z{POWER} | \Z{MOD}
 8  STRING  RESULT                  0 '' # variable name for the result of operation
 9  STRING  STRING_ARGUMENTS        0 '' # arguments for string operation
10  STRING  OBJECTS_FILE            1 'top.out' # filename
11  STRING  INCLUDE_FILE            1 '__mod' # include file name
12  STRING  FILE                    1 'default' # partial or complete filename
13  STRING  RECORD                  1 'undefined' # contents of the input line
14  STRING  THEN                    1 'undefined' # statement when IF evaluates to T
15  STRING  ELSE                    1 'undefined' # statement when IF evaluates to F
16  STRING  COMMAND                 1 'nothing' # UNIX command
17  STRING  FILE_EXT                1 '' # file extension for filename construction
18  STRING  OUTPUT_DIRECTORY        1 '' # output directory
19  STRING  FILE_ACCESS             1 'SEQUENTIAL'  # file access: \Z{SEQUENTIAL} | \Z{APPEND}
20  STRING  FILE_STATUS             1 'UNKNOWN'     # file status: \Z{UNKNOWN} | \Z{OLD} | \Z{NEW}
31  STRING  BUILD_METHOD            1 'INTERNAL_COORDINATES' # method for building coordinates: \Z{INTERNAL_COORDINATES}  | \Z{ONE_STICK} | \Z{TWO_STICKS} | \Z{3D_INTERPOLATION}
32  STRING  DIHEDRALS               0 'PHI' 'PSI' 'CHI1' 'CHI2' 'CHI3' 'CHI4' # dihedral angle type selection: \Z{phi}  | \Z{psi}  | \Z{omega} | \Z{chi1} | \Z{chi2} | \Z{chi3} | \Z{chi4} | \Z{chi5} | \Z{alpha}
33  STRING  RES_TYPES               1 'ALL' # residue type selection
34  STRING  ATOM_TYPES              1 'ALL' # atom type selection
35  STRING  VARIABILITY_FILE        1 'undefined' # output filename
36  STRING  ALIGN_CODES             0 'all' # codes of proteins in the alignment
37  STRING  ATOM_FILES              0 '' # complete or partial atom filenames
38  STRING  OUTPUT                  1 'LONG'  # what and/or how to output
39  STRING  CHANGE                  1 'RANDOMIZE' # what to do: \Z{RANDOMIZE} | \Z{OPTIMIZE}
40  STRING  FIT_ATOMS               1 'CA' # atom type(s) being superposed
41  STRING  MODEL_FORMAT            0 'PDB' # selects input atom file format: \Z{PDB} | \Z{CHARMM} | \Z{UHBD}
42  STRING  SEQUENCE                1 'undefined' # protein code in the alignment whose topology is constructed
43  STRING  RESTRAINT_TYPE          0 'STEREO' # restraint type to be calculated: \Z{STEREO} | \Z{BOND} | \Z{ANGLE} | \Z{IMPROPER} | \Z{DIHEDRAL} | \Z{MRFP_STEREO} | \Z{MRFP_BOND} | \Z{MRFP_ANGLE} | \Z{MRFP_DIHEDRAL} | \Z{SPHERE} | \Z{SPHERE14} | \Z{LJ} | \Z{LJ14} | \Z{COULOMB} | \Z{COULOMB14} | \Z{ALPHA} | \Z{STRAND} | \Z{SHEET} | \Z{DISTANCE} | \Z{USER_DISTANCE} \Z{NONB_PAIR_SPLINE} | \Z{PHI-PSI_BINORMAL} | \Z{PHI-PSI_CLASS} | \Z{PHI_DIHEDRAL} | \Z{PSI_DIHEDRAL} | \Z{OMEGA_DIHEDRAL} | \Z{CHI1_DIHEDRAL} | \Z{CHI2_DIHEDRAL} | \Z{CHI3_DIHEDRAL} | \Z{CHI4_DIHEDRAL}
44  STRING  ALIGNMENT_FORMAT        0 'PIR' # format of the alignment file: \Z{PIR} | \Z{PAP} | \Z{QUANTA} | \Z{INSIGHT} | \Z{FASTA}
45  STRING  undefined81             0 ''
46  STRING  ALIGNMENT_FEATURES      0 'INDICES CONSERVATION' # what alignment features to write out: \Z{ACCURACY} | \Z{HELIX} | \Z{BETA} | \Z{ACCESSIBILITY} | \Z{STRAIGHTNESS} | \Z{CONSERVATION} | \Z{INDICES} | \Z{ALL} | \Z{GAPS}
47  STRING  RESIDUE_TYPE            1 'undefined' #
48  STRING  MATRIX_FILE             1 'family.mat' # the filename of the pairwise distance matrix
49  STRING  BASIS_PDF_WEIGHT        1 'LOCAL' # a method for calculation of basis pdf weights: \Z{LOCAL} | \Z{GLOBAL}
50  STRING  DISTANCE_ATOMS          2 'CA' 'CA' # atom types for distance generation
51  STRING  REFERENCE_ATOM          1 '' # reference atom name in SUPERPOSE
52  STRING  undefined91             0 ''
53  STRING  ATOM_IDS                0 '' # atom ids: \Z{atom:residue_id[:chain_id]}
54  STRING  SPHERE_CENTER           2 'undefined' 'undefined' # '\#RES1:C' 'ATOM_NAME'
55  STRING  SELECTION_MODE          1 'ATOM' # selecting what: \Z{ATOM} | \Z{RESIDUE}
56  STRING  SELECTION_SEARCH        1 'SEGMENT' # search method: \Z{SPHERE} | \Z{SEGMENT}
57  STRING  SELECTION_STATUS        1 'INITIALIZE' # what to do with selected atoms: \Z{ADD} | \Z{REMOVE} | \Z{INITIALIZE}
58  STRING  SELECTION_SEGMENT       2 '' '' # \Z{RES:CHN} ids for the first and last residues in a chain/segment; or 'LOOPS'
59  STRING  SELECTION_FROM          1 'ALL'       # selecting from: \Z{ALL} | \Z{SELECTED}
60  STRING  ALIGN_CODES2            0 'all' # align codes for alignment2
61  STRING  MD_RETURN               1 'FINAL'     # return MODEL with \Z{MINIMAL} energy or \Z{FINAL} MODEL
62  STRING  ATOM_CLASSES_FILE       1 '$(LIB)/atmcls-melo.lib' # library with atom class definitions for MODELLER non-bonded restraints
63  STRING  RR_FILE                 1 '$(LIB)/as1.sim.mat' # input residue-residue scoring file
64  STRING  SEARCH_CHAINS_FILE      1 '$(LIB)/CHAINS_all.seq' # file with a list of sequence codes
65  STRING  MODEL_SEGMENT           2 'FIRST:@' 'LAST:' # segment to be read in
66  STRING  MODEL2_SEGMENT          2 'FIRST:@' 'LAST:' # segment to be read in
67  STRING  ATOM_FILES_DIRECTORY    1 './' # input atom files directory list (e.g., \Z{dir1:dir2:dir3:./:/})
68  STRING  SEARCH_SORT             1 'LONGER' # which sequence to use for normalization when sorting the hit list: \Z{SHORTER} | \Z{LONGER}
69  STRING  RESTRAINTS_FORMAT       1 'MODELLER' # format of the restraints file: \Z{MODELLER} | \Z{USER}
70  STRING  SEARCH_CHAINS_LIST      1 '$(LIB)/CHAINS_3.0_40_XN.cod' # file with sequences
71  STRING  SEGMENT_IDS             0 '' # new segment ids
72  STRING  RESIDUE_IDS             0 '' # residue id (number:chnid)
73  STRING  ALIGN_WHAT              1 'BLOCK' # what to align in ALIGN; \Z{BLOCK} | \Z{ALIGNMENT} | \Z{LAST}
74  STRING  CLUSTER_METHOD          1 'RMSD' # what distance function to use in \C{CLUSTER}; \Z{RMSD} | \Z{MAXIMAL_DISTANCE}
75  STRING  SEARCH_GROUP_LIST       1 '$(LIB)/CHAINS_3.0_40_XN.grp' # file with 40\% groups of sequences
76  STRING  RESTYP_LIB_FILE         1 '$(LIB)/restyp.lib' # residue type library
77  STRING  SWAP_ATOMS_IN_RES       1 '' # minimize RMS by swapping atoms in these residues (1 char code: 'DEFHLNQRVY')
78  STRING  ATOM_FILES2             0 '' # complete or partial atom filenames for ALIGNMENT2
79  STRING  INPUT_WEIGHTS_FILE      1 '' # 
80  STRING  OUTPUT_WEIGHTS_FILE     1 '' # 
31  LOGICAL FIT                     1 on # whether to do pairwise least-squares fitting or ALIGN2D alignment
32  LOGICAL SUPERPOSE_REFINE        1 off # whether to refine the superposition
35  LOGICAL DYNAMIC_SPHERE          1 on # whether to use dynamic soft-sphere repulsion terms
36  LOGICAL DYNAMIC_LENNARD         1 off # whether to use dynamic Lennard-Jones energy terms
37  LOGICAL DYNAMIC_COULOMB         1 off # whether to use dynamic Coulomb energy terms
38  LOGICAL WRITE_FIT               1 off # whether to write out fitted coordinates to .fit files
39  LOGICAL ASGL_OUTPUT             1 off # whether to write output for ASGL
40  LOGICAL ADD_RESTRAINTS          1 off # whether to add new restraints to existing restraints
41  LOGICAL ADD_SEGMENT             1 off # whether to add the new segments to the list of segments
42  LOGICAL REMOVE_GAPS             1 on # whether to remove all-gap positions in input alignment
44  LOGICAL LOCAL_ALIGNMENT         1 off # whether to do local as opposed to global alignment
45  LOGICAL WATER_IO                1 off # whether to read water coordinates
46  LOGICAL HETATM_IO               1 off # whether to read HETATM coordinates
47  LOGICAL HYDROGEN_IO             1 off # whether to read hydrogen coordinates
48  LOGICAL INITIALIZE_XYZ          1 on # whether to use IC entries to calculate all coordinates
49  LOGICAL ADD_SEQUENCE            1 off # whether to add the new sequences to the existing alignment
50  LOGICAL ALIGN3D_TRF             1 off # whether to transform the distances before dynamic programming
51  LOGICAL PATCH_DEFAULT           1 on # whether to do default NTER and CTER patching
52  LOGICAL INTERSEGMENT            1 on # whether to restrain inter-segment non-bonded pairs
53  LOGICAL ALIGN3D_REPEAT          1 off # do several starts to maximize number of equivalent positions
54  LOGICAL ALIGN_ALIGNMENT         1 off # writing out an alignment of alignments (for *)
55  LOGICAL INIT_VELOCITIES         1 on # whether to initialize velocities before MD
56  LOGICAL ADD_SYMMETRY            2 off on # whether to add segment pair, add atoms to segment pair
57  LOGICAL SPLINE_ON_SITE          1 off # whether to convert restraints to splines
58  LOGICAL ADD_PARAMETERS          1 off # whether to add new parameters to existing ones
59  LOGICAL ADD_TOPOLOGY            1 off # whether to add new residue topologies to existing ones
60  LOGICAL WRITE_WHOLE_PDB         1 on # whether to write out all lines in the input PDB file
61  LOGICAL WRITE_ALL_ATOMS         1 on # whether to write all atoms, even if unselected
62  LOGICAL CURRENT_DIRECTORY       1 on # whether to write output .fit files to current directory
63  LOGICAL DETAILED_DEBUGGING      1 off # whether to evaluate energy and derivatives wrt each restraint
64  LOGICAL DYNAMIC_PAIRS           1 off # whether to do dynamic pairs irrespective of anything
65  LOGICAL DYNAMIC_MODELLER        1 off # whether to use dynamic MODELLER non-bonded restraints
66  LOGICAL FAST_SEARCH             1 off # whether to use fast sequence search or not
67  LOGICAL DATA_FILE               1 off # whether results go to a separate file or not
68  LOGICAL NORMALIZE_PROFILE       1 off # whether to normalize energy/violations profiles or not, by the number of terms per residue
69  LOGICAL CUT_OVERHANGS           1 off # whether to cut overhangs at OVERHANG residues or not
70  LOGICAL RESIDUE_SPAN_SIGN       1 on  # whether to do N*(N-1)/2 loop for atom pairs in MAKE_RESTRAINTS RESTRAINT_TYPE = 'distance'
71  LOGICAL COVALENT_CYS            1 off # whether to consider SG-SG covalent bond similar to polypeptide chain when proximity of residues along the sequence is considered. If PATCH_SS_MODEL is done, then make it ON.
72  LOGICAL READ_WEIGHTS            1 off # whether to read the whole NxM weight matrix for ALIGN*
73  LOGICAL DYNAMIC_ACCESS          1 off # whether to use dynamic accessibility energy terms
74  LOGICAL DIH_LIB_ONLY            1 off # whether to use only library, not homologs for dihedral angle rsrs
75  LOGICAL NO_TER                  1 off # whether to not write TER into PDB
76  LOGICAL WRITE_WEIGHTS           1 off # whether to write the whole NxM weight matrix for ALIGN*
77  LOGICAL EXCL_LOCAL              4 on on on on # whether to exclude bonds, angles, dihedrals, explicit excl pairs from the homology-derived distance rsrs
--- END OF FILE

The third column contains a number of values for each of the options if this 
number is fixed, otherwise it contains 0.

You can change any command or variable name without changing the source code
relying on this file, but you can not change the order of the lines.
