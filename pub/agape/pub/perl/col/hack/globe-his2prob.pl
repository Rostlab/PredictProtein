#!/usr/bin/perl -w
##!/usr/pub/bin/perl -w
#
$scrName=$0;$scrName=~s/^.*\/|\.pl//g;
$scrGoal="reads counts from his-phd.dat (generated by rdb2his.pl)\n".
    "     \t spits out probabilities (100 at peak)";
#  
#
$[ =1 ;
				# include libraries
push (@INC, "/home/rost/perl") ;if (! defined $ENV{'PERLLIB'}){push(@INC,$ENV{'PERLLIB'});}
require "lib-ut.pl"; require "lib-br.pl";
				# defaults
$col="2,3";			# column to read

if ($#ARGV<1){			# help
    print "goal:\t $scrGoal\n";
    print "use: \t '$scrName his-file'\n";
    print "opt: \t col=$col          (default for col number to read, e.g. val=2, n=3)\n";
    print "     \t fileOut=x\n";
#    print "     \t \n";
    exit;}
				# initialise variables
$fhin="FHIN";$fhout="FHOUT";
				# read command line
$fileIn=$ARGV[1];
$tmp=$fileIn;$tmp=~s/^.*\///g;$fileOut="Prob-".$tmp;
$SEP="\t";

foreach $_(@ARGV){
    next if ($_ eq $ARGV[1]);
    if   ($_=~/^fileOut=(.*)$/){$fileOut=$1;}
    elsif($_=~/^col=(.*)$/)    {$col=$1;}
#    elsif($_=~/^=(.*)$/){$=$1;}
    else {print"*** wrong command line arg '$_'\n";
	  die;}}

die ("missing input $fileIn\n") if (! -e $fileIn);

				# digest col
($colVal,$colNum)=split(/,/,$col);
				# ------------------------------
				# (1) read file
&open_file("$fhin", "$fileIn");
$ct=$#val=$#num=0;
while (<$fhin>) {
    next if ($_=~/^\#/);
    ++$ct;
    next if ($ct<2);
    $_=~s/\n//g;
    @tmp=split(/\t/,$_);
    push(@val,$tmp[$colVal]);
    push(@num,$tmp[$colNum]);
}close($fhin);
				# ------------------------------
$max=0;				# (2) get max
foreach $num (@num){
    $max=$num if ($num>$max);}
				# ------------------------------
				# (2) 
printf "%-5s\t%-6s\t%-5s\t%-8s\n","n","val","count","prob";
foreach $it (1..$#val){
    printf "%5d\t%8.3f\t%5d\t%8.3f\n",$it,$val[$it],$num[$it],($num[$it]/$max);
}
				# ------------------------------
				# write output
&open_file("$fhout",">$fileOut"); 
printf $fhout "%-5s".$SEP."%-6s".$SEP."%-5s".$SEP."%-8s\n","n","val","count","prob";
foreach $it (1..$#val){
    printf $fhout "%5d".$SEP."%8.3f".$SEP."%5d".$SEP."%8.3f\n",$it,$val[$it],$num[$it],($num[$it]/$max);
}
close($fhout);

print "--- output in $fileOut\n";
exit;
