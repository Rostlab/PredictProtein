#!/bin/sh
# preinst script for #PACKAGE#
#
# see: dh_installdeb(1)

set -e

# do we have debconf?
if [ -f /usr/share/debconf/confmodule ]; then
    . /usr/share/debconf/confmodule
    DEBCONF=true
else
    DEBCONF=
fi


# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

validate_nonprofit() {
    if [ -n "$DEBCONF" ]; then
	db_input high shared/predictprotein/nonprofit_org || true
	db_go || true

	# Throw error if not non-profit:
	db_get shared/predictprotein/nonprofit_org
	if [ "$RET" != "true" ]; then
		# The user is for profit - $$$ - but perhaps this system should forget about it so that the question is asked again.
		#db_unregister shared/predictprotein/nonprofit_org

		#db_fset shared/predictprotein/contact_biosof seen false
		db_input high shared/predictprotein/contact_biosof || true
		db_go || true
		db_purge || true
		echo "aborting - profit organization" >&2;
		exit 1;
	fi
    else
	# no debconf, fall back
	cat << EOF
This package is provided for non-profit organizations only.
For profit organizations and users representing them please contact
info@bio-sof.com to obtain a commercial license.
EOF
	echo -n "Do you represent a non-profit organization? (y/n)" >&2
	read line
	case ${line} in
	    y|yes|Y|Yes|YES)
	    		;;

	    *)		echo "Please contact info@bio-sof.com to obtain a commercial license." >&2
	    		echo "This package is provided for non-profit organizations only.  This installation is now going to abort." >&2
			exit 1
			;;
	esac
    fi
 
}

case "$1" in
    install)
    	validate_nonprofit
    ;;

    upgrade)
    ;;

    abort-upgrade)
    ;;

    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0

# vim:ai:
